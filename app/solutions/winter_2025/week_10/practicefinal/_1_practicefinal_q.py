from typing import Any

total_points: list[float] = [
    2.0,
    2.0,
    2.0,
    2.0,
    2.0,
    2.0,
    2.0,
    2.0,
    2.0,
    2.0,
    2.0,
    2.0,
    2.0,
    2.0,
    2.0,
    2.0,
    2.0,
    2.0,
    2.0,
    2.0,
    2.0,
    10.0,
    10.0,
]

solutions: dict[str, Any] = {
    "q1-1-what-is-the-output-of-the-following-code": "The standard deviation of the array is 5.938",
    "q1-2-what-datatype-has-the-highest-precision": "np.float128",
    "q1-3-object-oriented-programming-in-python": "Polymorphism",
    "q1-4-control-structures-in-python": "lambda",
    "q1-5-inheritance-in-python": "Python supports multiple inheritance.",
    "q1-6-ethical-plotting-in-python": "Ensuring color accessibility and consistent axis labeling",
    "q1-7-machine-learning-overfitting": "Overfitting can be mitigated by techniques such as regularization or cross-validation.",
    "q1-8-abstract-methods-in-python": "They force subclasses to provide implementations for these methods.",
    "q1-9-scope-of-variables-in-classes": "Class variables are shared across all instances, while instance variables are unique to each instance.",
    "q1-10-image-analysis-package": "scikit-image",
    "q2-1-python-objects": [
        "Integer",
        "String",
        "Decorator",
        "Bytes",
        "Module",
        "Class",
        "Exception",
    ],
    "q2-2-python-data-structures": ["List", "Dictionary", "Tuple", "Set", "FrozenSet"],
    "q2-3-python-lists": ["They are mutable.", "They support slicing operations."],
    "q2-4-python-dictionaries": [
        "Another dictionary",
        "A custom class instance",
        "A lambda function",
        "A built-in function like `len`",
        "A module object",
    ],
    "q2-5-python-mutability": ["bytearray", "List", "Dictionary"],
    "q2-6-floating-point-numbers": [
        "They follow the IEEE standard in most implementations.",
        "They can cause precision issues due to binary representation.",
        "They are immutable.",
    ],
    "q2-7-python-classes": [
        "They can define both instance methods and class methods.",
        "They can utilize decorators like `@classmethod` and `@staticmethod`.",
        "They are defined using the `class` keyword.",
    ],
    "q2-8-continue-break-else": ["`break`", "`continue`", "`for-else`"],
    "q2-9-python-inheritance": [
        "A class can inherit from multiple classes using parentheses.",
        "The `super()` function can be used to call parent class methods.",
    ],
    "q2-10-valid-python-syntax": [
        "`try:`",
        "`while x < 10:`",
        "`def my_func():`",
        "`if y == 20:`",
        "`with open('file.txt') as f:`",
        "`except ValueError:`",
    ],
    "q2-11-machine-learning": [
        "Both gradient descent and stochastic gradient descent are optimization methods.",
        "Feature engineering can significantly impact model performance.",
        "Ensemble methods can help reduce variance and improve generalization.",
    ],
    "q6-1-Model-Performance": [
        "`The model is very accurate at predicting cats on the training dataset`",
        "`The model is very accurate at predicting dogs on the training dataset`",
        "`The model is overfit to the training data`",
    ],
    "q6-2-Model-Improvements": [
        "`The model might be improved by adding more training data`",
        "`The model might be improved using a different model`",
        "`The model might be improved using data augmentation to manipulate the training data`",
        "`The model might be improved by adding regularization methods to the model`",
    ],
}
